name: CI for Production

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Tests (PHP ${{ matrix.php-version }})

    strategy:
      matrix:
        php-version: [8.2, 8.3, 8.4]

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, pdo, sqlite3, bcmath, fileinfo, openssl, tokenizer, xml, ctype, json, curl, zip
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            dependencies-composer-

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Create .env file
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Create SQLite Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run Database Migrations
        run: php artisan migrate --force
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite

      - name: Run Tests with Coverage
        run: ./vendor/bin/pest --parallel --coverage --min=15
        env:
          APP_ENV: testing
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"

      - name: Run Laravel Pint (Code Style)
        run: ./vendor/bin/pint --test

      - name: Run Static Analysis (if enabled)
        run: ./vendor/bin/phpstan analyse --memory-limit=2G
        continue-on-error: true

  security:
    runs-on: ubuntu-latest
    name: Security Scan

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mbstring, pdo, sqlite3, bcmath, fileinfo, openssl, tokenizer, xml, ctype, json, curl, zip

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Security Checker
        run: composer audit
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: [tests, security]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Add your deployment commands here"
          echo "This could include:"
          echo "- Deploy to server"
          echo "- Update database"
          echo "- Clear caches"
          echo "- Restart services"
